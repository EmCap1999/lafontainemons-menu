name: üõ°Ô∏è PR Check

on:
  pull_request:
    branches: [main, dev]

jobs:
  lint-and-build:
    name: üîç Lint & Build
    runs-on: ubuntu-24.04
    env:
      CI: true
      NODE_ENV: test

    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v4

      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üßº Auto-fix lint issues
        run: npm run lint:fix

      - name: üìã Check for remaining lint issues
        run: npm run lint

      - name: üåç Create CI environment config
        run: |
          mkdir -p frontend/src/environments
          cat > frontend/src/environments/environment.ts << 'EOF'
          export const environment = {
            production: false,
            apiUrl: '',
            frontendUrl: 'http://localhost:4200'
          };
          EOF

      - name: üèóÔ∏è Build Frontend (no API calls)
        working-directory: frontend
        run: npx ng build --configuration production

      - name: üîß Test Backend Compilation
        run: |
          npm start --workspace=backend &
          BACKEND_PID=$!
          sleep 5
          kill $BACKEND_PID || echo "‚úÖ Backend compiles and starts correctly"

      - name: üóÑÔ∏è Build Database Package
        run: npm run build --workspace=database

      - name: üîç Type Check Database
        run: npm run typecheck --workspace=database

      - name: ‚öôÔ∏è Validate Database Config
        run: |
          cd database
          node -e "
            import('./drizzle.config.ts').then(config => {
              console.log('‚úÖ Drizzle config valid');
            }).catch(err => {
              console.error('‚ùå Drizzle config error:', err.message);
              process.exit(1);
            });
          "
          cd ..

      - name: üå± Validate Seed Data Structure
        run: |
          cd database
          node -e "
            Promise.all([
              import('./seeds/data/index.js'),
              import('./dist/src/schema/index.js')
            ]).then(([data, schema]) => {
              console.log('‚úÖ Seed data structure valid');
              console.log('‚úÖ Schema types accessible');
            }).catch(err => {
              console.error('‚ùå Data validation error:', err.message);
              process.exit(1);
            });
          "
          cd ..
