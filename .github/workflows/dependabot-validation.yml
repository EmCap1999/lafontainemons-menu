name: Validate Dependencies

on:
  pull_request:
    paths:
      - 'package*.json'
      - '**/package*.json'
      - '.github/workflows/dependabot-validation.yml'

jobs:
  validate-dependencies:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install all dependencies
        run: npm ci --workspaces --include-workspace-root

      - name: Run linting
        run: npm run lint

      - name: Build database (required by backend)
        run: npm run build --workspace=database

      - name: Build backend
        run: npm run build --workspace=backend
        continue-on-error: true

      - name: Generate environment file for frontend
        run: |
          cd frontend
          npm run generate-env || true
        continue-on-error: true

      - name: Build frontend
        run: npm run build --workspace=frontend
        continue-on-error: true

      - name: Run type checking
        run: npm run typecheck:all || true
        continue-on-error: true

      - name: Check for vulnerabilities
        run: |
          npm audit --audit-level=moderate || true
          npm audit --audit-level=moderate --workspace=backend || true
          npm audit --audit-level=moderate --workspace=frontend || true
          npm audit --audit-level=moderate --workspace=database || true
        continue-on-error: true

  security-check:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Security Audit
        run: |
          npm audit --json > audit-report.json || true
          if [ -s audit-report.json ]; then
            echo "## Security Audit Report" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
            cat audit-report.json | jq '.vulnerabilities' >> $GITHUB_STEP_SUMMARY || true
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi

      - name: License Checker
        run: |
          npx license-checker --summary --excludePrivatePackages > license-summary.txt || true
          if [ -s license-summary.txt ]; then
            echo "## License Summary" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            cat license-summary.txt >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi
        continue-on-error: true